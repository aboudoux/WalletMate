@using WalletMate.Domain.Periods.ValueObjects
@using WalletMate.Infrastructure.Services
@namespace WalletMate.BlazorApp.Components
@inject WalletMate.Application.Core.IAuthorizationService AuthorizationService;

    <div class="container text-white-50 border rounded @ContainerClass" @onclick="Clicked" @onmouseover="MouseOver" @onmouseout="MouseOut">
        <div class="row">
            <div class="col text-center">
                @if (Pair == Pair.First)
                {
                    <i class="fa fa-user-circle" style="font-size: 80px;color: rgb(39,102,166);"></i>
                }
                else
                {
                    <i class="fa fa-user-circle-o" style="font-size: 80px;color: rgb(39,166,105);"></i>
                }
            </div>
        </div>
        <div class="row">
            <div class="col text-center">
                <strong class="text-secondary" style="font-size: 21px;filter: contrast(126%) grayscale(0%);">@Name</strong>
            </div>
        </div>
        @if (ShowPassword)
        {
            <div class="row">
                <div class="col text-center"><input type="password" class="border rounded animated bounce fast" placeholder="Mot de passe" autofocus required style="margin: 20px;" /></div>
            </div>
            <div class="row">
                <div class="col text-center">
                    <div role="group" class="btn-group btn-group-sm" style="margin: 10px;">
                        <button class="btn btn-success" type="button" style="width: 70px;" @onclick="OkClicked">OK</button>
                        <button class="btn btn-danger" type="button" style="width: 70px;;" @onclick="CancelClicked">Annuler</button>
                    </div>
                </div>
            </div>
        }
    </div>

@code {

    [Parameter]
    public string Id { get; set; }

    [Parameter]
    public Pair Pair { get; set; }

    [Parameter]
    public string Icon { get; set; } = "Images/man.jpg";

    [Parameter]
    public string Name { get; set; } = "Bob LEPONGE";

    private bool ShowPassword { get; set; }

    private string ContainerClass { get; set; } = "border-white shadow";

    private void Clicked()
    {
        if(!Cancel)
            ShowPassword = true;
        Cancel = false;
        ContainerClass = "border-white shadow";
    }

    private bool Cancel { get; set; }

    private void MouseOver() => ContainerClass = "border-dark";

    private void MouseOut() => ContainerClass = "border-white shadow";

    private async void OkClicked()
    {
        var authenticationId = await AuthorizationService.Authenticate(Name, "1234".ToSha1());
    }

    private void CancelClicked()
    {
        Cancel = true;
        ShowPassword = false;
    }

}

<style>

    input[type="password"] {
        text-align: center;
    }

        input[type="password"]::placeholder {
            text-align: center;
        }
</style>
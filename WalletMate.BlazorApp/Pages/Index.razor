@using WalletMate.Application.Pairs.Queries
@using WalletMate.BlazorApp.Components
@using WalletMate.Domain.Periods.ValueObjects
@inject WalletMate.Application.Core.IQueryBus QueryBus;
@page "/"

@if (_configuredPair == null)
{
    <h1>Loading...</h1>
}
else
{
    if (State.IsConnected)
    {
        <p>Connected</p>
        <button @onclick="DisconnectClicked">Disconnect</button>
        <Datatable/>
    }
    else
    {
        <div class="container" style="margin-top: 20px;">
            <div class="row">
                <div class="col text-center">
                    <PairCard Name="@_configuredPair.FirstPairName" Pair="@Pair.First"/>
                </div>
                <div class="col text-center" style="margin-left: 20px;">
                    <PairCard Name="@_configuredPair.SecondPairName" Pair="@Pair.Second"/>
                </div>
            </div>
        </div>
    }
}

@code
{
    [CascadingParameter]
    private GlobalStateProvider State { get; set; }

    private IConfiguredPair _configuredPair;

    protected override async Task OnInitializedAsync()
    {
        _configuredPair = await QueryBus.QueryAsync(new GetConfiguredPair());
    }

    private void DisconnectClicked() => State.IsConnected = false;

}
